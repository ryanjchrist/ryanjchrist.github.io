---
layout: posts
title:  "Altimeter"
tagline: ""
date:   2024-10-19 00:00:00 +0000
tags: [Electronics, CAD, Drones]
author_profile: true
author: Ryan Christ
categories: project
highlight_home: true
header:
  overlay_image: "/assets/images/SkydioAlt.jpeg"
  teaser: "/assets/images/DroneAlt.jpg"
  caption: "Photo credit: [O3ST: **Julian Dale**](https://www.o3st.com/wp-content/uploads/2024/08/Skydio2crop-1536x948.jpeg)"
description: Add Description
---
# Altimeter
## Context
One of the concerns my team and I identified involved the imprecision of drone altimeters. Altimeter precision is crucial for accurately identifying the height of elephants. As the drone flies over an elephant, we should be able to detect a change in altimeter height, which will later be used for more accurate body conditioning.

## Content
To address this issue, I have been working with Julian Dale, a Duke Project Engineer and Director of O3ST, to redesign their existing altimeter system. This includes reducing the overall size and production costs of their current model. I have switched the larger Grove GPS with a much more compact GP1818MK. I have also developed support for a new LW20 rangefinder for higher accuracy at greater altitudes. This altimeter works right over our I2C protocol and enhances the drone's altitude tracking without disrupting the overall system.

In addition to the altimeter update, I introduced a new feature that logs vertical altitude in the system's data logs. This was achieved by using the gravitational acceleration readings from the IMU while compensating for the drone's tilt angle. However, during testing, we noticed variations in the tilt angle reading. When going through extreme movements while attached to the gimbal, the log file was recording tilt angles of up to 14 degrees. However, the output from the IMU on the gimbal was only fluctuating by ~0.02 degrees, and it was confirmed visually that it was not reaching a 14-degree tilt angle. I observed that acceleration values from the drone were influencing the tilt calculation, likely due to vibrations. To solve this issue, I implemented a 1D Kalman Filter, combining acceleration trigonometry with gyroscope integration to eliminate noise.

I also updated log filenames to use time/date stamps instead of the old sequential numbering method.

Additional improvements I am currently working on include:

* Adding a code switch to log data every 1 sec or via hot shoe trigger logging at a 15Hz shutter speed
* Incorporating a smaller Arduino in our design
* Adding a cheaper IMU module with an enable/disable option in the code
<div id="nanogallery2"></div>
<script>
  $("#nanogallery2").nanogallery2({
  // ### gallery settings ###
  thumbnailHeight:  150,
  thumbnailWidth:   150,
  itemsBaseURL:     '/assets/images/',

  // ### gallery content ###
  items: [
      { src: 'O3STAltimeter.jpg', srct: 'O3STAltimeter.jpg' },
      { src: 'AltWiring.png', srct: 'AltWiring.png' },
      { src: 'AltimeterCode1.png', srct: 'AltimeterCode1.png' },
      { src: 'SkydioAlt.jpeg', srct: 'SkydioAlt.jpeg' },
      { src: 'DroneAlt.jpg', srct: 'DroneAlt.jpg' },

  ]
});
</script>
<br>
  